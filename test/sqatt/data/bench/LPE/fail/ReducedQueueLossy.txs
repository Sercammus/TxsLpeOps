TYPEDEF Sort1_IntList ::= Cstr3_Cons { func8_hd :: Int; func9_tl :: Sort1_IntList } | Cstr7_Nil ENDDEF
TYPEDEF Sort2_QueueOp ::= Cstr4_Deq | Cstr5_Enq { func10_val :: Int } | Cstr6_Error ENDDEF
CHANDEF ChanDefs
    ::= Chan11 :: Sort2_QueueOp
      ; Chan12 :: Int
ENDDEF
PROCDEF LPE[Chan11 :: Sort2_QueueOp; Chan12 :: Int](var14 :: Int; var15 :: Sort1_IntList) ::=
        Chan11 ? var13 :: Sort2_QueueOp [[ IF (0==var14) THEN isCstr4_Deq(var13) ELSE False FI ]] >-> LPE[Chan11, Chan12](2, Cstr7_Nil())
     ## Chan11 ? var13 :: Sort2_QueueOp [[ IF (2==var14) THEN IF isCstr7_Nil(var15) THEN isCstr4_Deq(var13) ELSE False FI ELSE False FI ]] >-> LPE[Chan11, Chan12](2, Cstr7_Nil())
ENDDEF
MODELDEF Model ::=
    CHAN IN Chan11, Chan12
    CHAN OUT
    BEHAVIOUR LPE[Chan11, Chan12](0, Cstr7_Nil)
ENDDEF


